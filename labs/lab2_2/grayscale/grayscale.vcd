$date
	Tue Mar 19 14:01:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module rgb565GrayscaleIse_tb $end
$scope module DUT $end
$var wire 8 ! iseId [7:0] $end
$var wire 1 " start $end
$var wire 32 # valueA [31:0] $end
$var wire 32 $ result [31:0] $end
$var wire 16 % partialR4 [15:0] $end
$var wire 16 & partialR3 [15:0] $end
$var wire 16 ' partialR2 [15:0] $end
$var wire 16 ( partialR1 [15:0] $end
$var wire 16 ) partialG5 [15:0] $end
$var wire 16 * partialG4 [15:0] $end
$var wire 16 + partialG3 [15:0] $end
$var wire 16 , partialG2 [15:0] $end
$var wire 16 - partialG1 [15:0] $end
$var wire 16 . partialB2 [15:0] $end
$var wire 16 / partialB1 [15:0] $end
$var wire 32 0 grayscale [31:0] $end
$var wire 1 1 done $end
$var wire 16 2 R [15:0] $end
$var wire 16 3 G [15:0] $end
$var wire 16 4 B [15:0] $end
$var parameter 8 5 customInstructionId $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1011 5
$end
#0
$dumpvars
b10000 4
b10000 3
b10000 2
11
b10000 0
b100000000 /
b100000 .
b100000000000 -
b1000000000 ,
b100000000 +
b1000000 *
b100000 )
b1000000000 (
b100000000 '
b1000000 &
b100000 %
b10000 $
b1000001000010000 #
1"
b1011 !
$end
#30
b0 (
b0 '
b0 &
b0 %
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 /
b0 .
b0 0
b0 $
b0 2
b0 3
b0 4
01
b0 #
0"
#50
b1110 $
b1110 0
b101000000 (
b10100000 '
b101000 &
b10100 %
b11110000000 -
b111100000 ,
b11110000 +
b111100 *
b11110 )
b101000000 /
b101000 .
b1010 2
b1111 3
b10100 4
11
b101000111110100 #
1"
#80
b0 0
b0 (
b0 '
b0 &
b0 %
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 /
b0 .
b0 $
b0 2
b0 3
b0 4
01
b0 #
0"
#100
b11111 $
b11111 0
b1111100000 (
b111110000 '
b1111100 &
b111110 %
b111110000000 -
b1111100000 ,
b111110000 +
b1111100 *
b111110 )
b111110000 /
b111110 .
b11111 2
b11111 3
b11111 4
11
b1111101111111111 #
1"
#130
b0 (
b0 '
b0 &
b0 %
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 /
b0 .
b0 0
b0 $
b0 2
b0 3
b0 4
01
b0 #
0"
#150
b1001 $
b1001 0
b11000000 (
b1100000 '
b11000 &
b1100 %
b10110000000 -
b101100000 ,
b10110000 +
b101100 *
b10110 )
b100000 /
b100 .
b110 2
b1011 3
b10 4
11
b11000101100010 #
1"
#180
b0 0
b0 (
b0 '
b0 &
b0 %
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 /
b0 .
b0 $
b0 2
b0 3
b0 4
01
b0 #
0"
#200
